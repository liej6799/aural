// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aural_server_api.Database;

namespace aural_server_api.Migrations
{
    [DbContext(typeof(WeatherDatabaseContext))]
    [Migration("20191124151516_ModifiedWeather")]
    partial class ModifiedWeather
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("aural_library.Model.Database.Weather.CityModel", b =>
                {
                    b.Property<int>("CityId")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityAPIId")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Latitude")
                        .IsConcurrencyToken()
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .IsConcurrencyToken()
                        .HasColumnType("float");

                    b.Property<long>("Population")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<long>("Timezone")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("CityId");

                    b.ToTable("CityModels");
                });
#pragma warning restore 612, 618
        }
    }
}
